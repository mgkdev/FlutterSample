name: Flutter CI

on:
  # push:
    # branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]
  workflow_dispatch:
    inputs:
      run_build_android:
        description: 'Run: Build for Android'
        type: boolean
        default: true
      run_build_ios:
        description: 'Run: Build for iOS'
        type: boolean
        default: true
      run_build_web:
        description: 'Run: Build for Web'
        type: boolean
        default: true
      run_build_windows:
        description: 'Run: Build for Windows'
        type: boolean
        default: true
      run_build_linux:
        description: 'Run: Build for Linux'
        type: boolean
        default: true
      run_build_macos:
        description: 'Run: Build for macOS'
        type: boolean
        default: true
      build_number:
        description: 'Build Number (ex. 123)'
        type: string
      build_name:
        description: 'Build Name (ex. 1.2.3)'
        type: string

permissions:
  contents: read
  actions: read
  checks: write

env:
  # https://docs.flutter.dev/release/archive
  FLUTTER_VERSION: '3.13.9'
  FLUTTER_BUILD_ARGS: >-
    ${{ inputs.build_number != '' && format('--build-number {0}', inputs.build_number) || '' }}
    ${{ inputs.build_name != '' && format('--build-name {0}', inputs.build_name) || '' }}
  # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md#xcode
  DEVELOPER_DIR: '/Applications/Xcode_15.0.1.app/Contents/Developer'

jobs:
  check:
    name: 'Check'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup
      uses: ./.github/actions/setup

    - name: Analyze
      run: flutter analyze

    - name: Test
      run: flutter test --machine > test-report.json

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
          name: Flutter Tests
          path: test-report.json
          reporter: flutter-json
          fail-on-error: true

  build_android:
    name: 'Build for Android'
    needs: [check]
    if: inputs.run_build_android

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Setup
      uses: ./.github/actions/setup

    - run: flutter build apk ${{ env.FLUTTER_BUILD_ARGS }}
    - uses: actions/upload-artifact@v3
      with:
        name: build-apk
        path: build/app/outputs/flutter-apk

    - run: flutter build appbundle ${{ env.FLUTTER_BUILD_ARGS }}
    - uses: actions/upload-artifact@v3
      with:
        name: build-appbundle
        path: build/app/outputs/bundle/release

  build_ios:
    name: 'Build for iOS'
    needs: [check]
    if: inputs.run_build_ios

    runs-on: macos-13

    steps:
    - uses: actions/checkout@v3

    - name: Setup
      uses: ./.github/actions/setup

    - run: flutter build ios --simulator ${{ env.FLUTTER_BUILD_ARGS }}
    - uses: actions/upload-artifact@v3
      with:
        name: build-ios_simulator
        path: build/ios/iphonesimulator

    - run: flutter build ios --no-codesign ${{ env.FLUTTER_BUILD_ARGS }}
    - uses: actions/upload-artifact@v3
      with:
        name: build-ios
        path: build/ios/iphoneos

    - run: flutter build ipa --no-codesign ${{ env.FLUTTER_BUILD_ARGS }}
    - uses: actions/upload-artifact@v3
      with:
        name: build-ipa
        path: build/ios/archive

  build_web:
    name: 'Build for Web'
    needs: [check]
    if: inputs.run_build_web

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: flutter build web ${{ env.FLUTTER_BUILD_ARGS }}
      - uses: actions/upload-artifact@v3
        with:
          name: build-web
          path: build/web

  build_windows:
    name: 'Build for Windows'
    needs: [check]
    if: inputs.run_build_windows

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: flutter config --enable-windows-desktop

      - run: flutter build windows ${{ env.FLUTTER_BUILD_ARGS }}
      - uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: build/windows

  build_linux:
    name: 'Build for Linux'
    needs: [check]
    if: inputs.run_build_linux

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - run: flutter config --enable-linux-desktop

      - run: flutter build linux ${{ env.FLUTTER_BUILD_ARGS }}
      - uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: build/linux

  build_macos:
    name: 'Build for macOS'
    needs: [check]
    if: inputs.run_build_macos

    runs-on: macos-13

    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: flutter config --enable-macos-desktop

      - run: flutter build macos ${{ env.FLUTTER_BUILD_ARGS }}
      - uses: actions/upload-artifact@v3
        with:
          name: build-macos
          path: build/macos
